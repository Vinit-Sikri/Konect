# This is a GitHub Actions workflow to build, test, and deploy your Konect app.
# It will run on every push or pull request to the 'main' branch.

name: Konect CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Run Continuous Integration (Install, Lint, Build)
  ci-pipeline:
    name: CI Pipeline
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [ 20.x ] # Use a stable LTS Node.js version

    steps:
      # 1. Get the code from your repository
      - name: Check out code
        uses: actions/checkout@v4

      # 2. Set up the correct Node.js version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Speed up installs by caching dependencies

      # 3. Install ALL dependencies from the root
      - name: Install root dependencies
        run: npm install

      # 4. Run linting on the server app
      # We run this separately to know exactly where errors are
      - name: Lint server code
        run: npm run lint --prefix apps/server --if-present

      # 5. Run linting on the web app
      - name: Lint web code
        run: npm run lint --prefix apps/web --if-present

      # 6. Build the server
      - name: Build server
        run: npm run build --prefix apps/server

      # 7. Build the frontend (with lint:fix)
      # We run lint:fix here to automatically fix simple style errors
      - name: Build web
        run: |
          npm run lint:fix --prefix apps/web --if-present
          npm run build --prefix apps/web

  # Job 2: Run Continuous Deployment (Trigger Render)
  cd-deploy:
    name: CD Deploy
    runs-on: ubuntu-latest
    needs: ci-pipeline # This job will ONLY run if 'ci-pipeline' job succeeds
    
    # Only run this deploy job on a PUSH to the MAIN branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Trigger backend deploy on Render
        run: curl -X POST ${{ secrets.RENDER_DEPL_OY_HOOK_BACKEND }}
        
      - name: Trigger frontend deploy on Render
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}

